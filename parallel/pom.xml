<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cucumber-java-rerun-skeleton</artifactId>
        <groupId>cucumber</groupId>
        <version>0.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>parallel</artifactId>

    <properties>
        <parallel.executions>2</parallel.executions>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.0</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.22.0</version>
                <executions>
                    <execution>
                        <id>Parallel_1</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <rerunFailingTestsCount>3</rerunFailingTestsCount>
                            <reuseForks>false</reuseForks>
                            <argLine>-Xmx1024m</argLine>
                            <includes>
                                <include>**/*0IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <!-- This example has two executions of failsafe to simulate a parallel situation where
                         different build agents are executing different parallel branches of the cucumber tests.
                         The 'includes' are different so that each execution runs a different set of tests-->
                    <execution>
                        <id>Parallel_2</id>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                        <configuration>
                            <rerunFailingTestsCount>3</rerunFailingTestsCount>
                            <reuseForks>false</reuseForks>
                            <argLine>-Xmx1024m</argLine>
                            <includes>
                                <include>**/*1IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>verify</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit47</artifactId>
                        <version>2.22.0</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>com.github.temyers</groupId>
                <artifactId>cucumber-jvm-parallel-plugin</artifactId>
                <version>5.0.0</version>

                <executions>
                    <execution>
                        <id>generateRunners</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>generateRunners</goal>
                        </goals>
                        <configuration>
                            <!-- Mandatory -->
                            <!-- list of package names to scan for glue code -->
                            <glue>
                                <package>skeleton</package>
                            </glue>
                            <!-- List of cucumber plugins. When none are provided the json formatter is used. For more
                                 advanced usage see section about configuring cucumber plugins -->
                            <plugins>
                                <plugin>
                                    <name>pretty</name>
                                </plugin>
                                <plugin>
                                    <name>json</name>
                                    <extension>json</extension>
                                </plugin>
                                <plugin>
                                    <name>rerun</name>
                                    <outputDirectory>target</outputDirectory>
                                </plugin>
                            </plugins>
                            <!-- These are optional, with the default values -->
                            <!-- Where to output the generated tests -->
                            <outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
                            <!-- The directory, which must be in the root of the runtime classpath, containing your feature files.  -->
                            <featuresDirectory>src/test/resources</featuresDirectory>
                            <!-- Directory where the cucumber report files shall be written  -->
                            <cucumberOutputDir>target/cucumber</cucumberOutputDir>
                            <!-- CucumberOptions.strict property -->
                            <strict>true</strict>
                            <!-- CucumberOptions.monochrome property -->
                            <monochrome>true</monochrome>
                            <!-- If set to true, only feature files containing the required tags shall be generated. -->
                            <filterFeaturesByTags>true</filterFeaturesByTags>
                            <!-- Generate TestNG runners instead of JUnit ones. -->
                            <useTestNG>false</useTestNG>
                            <!-- The naming scheme to use for the generated test classes.  One of 'simple' or 'feature-title' -->
                            <namingScheme>pattern</namingScheme>
                            <!-- The class naming pattern to use.  Only required/used if naming scheme is 'pattern'.-->
                            <!-- In this case we use a module pattern {c:n} to get a counter modulo n. We can use this
                                 counter together with failsafe.includes to achieve parallel execution across separate
                                 build agents.-->
                            <namingPattern>Parallel{c}_{f}_Gen{c:${parallel.executions}}IT</namingPattern>
                            <!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per scenario.  FEATURE generates a runner per feature. -->
                            <parallelScheme>FEATURE</parallelScheme>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>